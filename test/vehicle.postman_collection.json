{
	"info": {
		"name": "vehicle",
		"_postman_id": "699a5209-bc1b-bce8-a1e1-2849fb193afc",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "0-prepare",
			"description": "",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"var token = jsonData.data?jsonData.data.token:jsonData.token;",
									"tests[\"token found\"] = token;",
									"if(token){",
									"    postman.setEnvironmentVariable(\"token\", token);",
									"}",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\":\"{{auth_user}}\",\n  \"password\":\"{{auth_passwd}}\"\n}"
						},
						"url": {
							"raw": "http://{{auth_api_host}}:{{auth_api_port}}/auth/login",
							"protocol": "http",
							"host": [
								"{{auth_api_host}}"
							],
							"port": "{{auth_api_port}}",
							"path": [
								"auth",
								"login"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "clear all items in db",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "http://{{vehicle_api_host}}:{{vehicle_api_port}}/api/items",
							"protocol": "http",
							"host": [
								"{{vehicle_api_host}}"
							],
							"port": "{{vehicle_api_port}}",
							"path": [
								"api",
								"items"
							]
						},
						"description": "A `GET` request to this endpoint returns the list of all request headers as part of the response JSON.\nIn Postman, sending your own set of headers through the [Headers tab](https://www.getpostman.com/docs/requests#headers?source=echo-collection-app-onboarding) will reveal the headers as part of the response."
					},
					"response": []
				}
			]
		},
		{
			"name": "1-auxiliary",
			"description": "",
			"item": [
				{
					"name": "add warehouse",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"jsonData = jsonData.data||jsonData;",
									"tests[\"uuid found\"] = jsonData.uuid;",
									"if(jsonData.uuid){",
									"    postman.setEnvironmentVariable(\"warehouse_id\", jsonData.uuid);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\",\n  \"data\":{\n    \"category\":\"Warehouse\",\n    \"fields\":{\n      \"name\":\"a1\",\n      \"description\":\"warehouse\",\n      \"area\":1000,\n      \"capacity\":300\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{vehicle_api_host}}:{{vehicle_api_port}}/api/warehouses",
							"protocol": "http",
							"host": [
								"{{vehicle_api_host}}"
							],
							"port": "{{vehicle_api_port}}",
							"path": [
								"api",
								"warehouses"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "query warehouse",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"at least one found\"] = jsonData.length >=1||jsonData.data.length >=1",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "http://{{vehicle_api_host}}:{{vehicle_api_port}}/api/warehouses",
							"protocol": "http",
							"host": [
								"{{vehicle_api_host}}"
							],
							"port": "{{vehicle_api_port}}",
							"path": [
								"api",
								"warehouses"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "add model",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"jsonData = jsonData.data||jsonData;",
									"tests[\"uuid found\"] = jsonData.uuid;",
									"if(jsonData.uuid){",
									"    postman.setEnvironmentVariable(\"model_id\", jsonData.uuid);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\",\n  \"data\":{\n    \"category\":\"Model\",\n    \"fields\":{\n      \"brand\":\"Benz\",\n      \"modelName\":\"C200\",\n      \"exterior\": \"white\",\n      \"interior\":\"black\",\n      \"style\":\"2017\",\n      \"icon\":[\"http://localhost/image/c200_1.png\",\"http://localhost/image/c200_2.png\"]\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{vehicle_api_host}}:{{vehicle_api_port}}/api/models",
							"protocol": "http",
							"host": [
								"{{vehicle_api_host}}"
							],
							"port": "{{vehicle_api_port}}",
							"path": [
								"api",
								"models"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "patch model",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"ok\"] = responseCode.code == 200;"
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\",\n  \"data\":{\n    \"category\":\"Model\",\n    \"fields\":{\n      \"brand\":\"Benz\",\n      \"modelName\":\"C200\",\n      \"exterior\": \"white\",\n      \"interior\":\"black\",\n      \"style\":\"2018\",\n      \"icon\":[\"http://localhost/image/c200_1.png\",\"http://localhost/image/c200_2.png\"]\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{vehicle_api_host}}:{{vehicle_api_port}}/api/models/{{model_id}}",
							"protocol": "http",
							"host": [
								"{{vehicle_api_host}}"
							],
							"port": "{{vehicle_api_port}}",
							"path": [
								"api",
								"models",
								"{{model_id}}"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "add model 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"jsonData = jsonData.data||jsonData;",
									"tests[\"uuid found\"] = jsonData.uuid;",
									"if(jsonData.uuid){",
									"    postman.setEnvironmentVariable(\"model_1_id\", jsonData.uuid);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\",\n  \"data\":{\n    \"category\":\"Model\",\n    \"fields\":{\n      \"brand\":\"Benz\",\n      \"modelName\":\"C300\",\n      \"exterior\": \"white\",\n      \"interior\":\"black\",\n      \"style\":\"2017\",\n      \"icon\":[\"http://localhost/image/c300_1.png\",\"http://localhost/image/c300_2.png\"]\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{vehicle_api_host}}:{{vehicle_api_port}}/api/models",
							"protocol": "http",
							"host": [
								"{{vehicle_api_host}}"
							],
							"port": "{{vehicle_api_port}}",
							"path": [
								"api",
								"models"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "query models",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"at least one found\"] = jsonData.length >=1||jsonData.data.length >=1",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "http://{{vehicle_api_host}}:{{vehicle_api_port}}/api/models",
							"protocol": "http",
							"host": [
								"{{vehicle_api_host}}"
							],
							"port": "{{vehicle_api_port}}",
							"path": [
								"api",
								"models"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "add model 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"jsonData = jsonData.data||jsonData;",
									"tests[\"uuid found\"] = jsonData.uuid;",
									"if(jsonData.uuid){",
									"    postman.setEnvironmentVariable(\"model_2_id\", jsonData.uuid);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\",\n  \"data\":{\n    \"category\":\"Model\",\n    \"fields\":{\n      \"brand\":\"Benz\",\n      \"modelName\":\"C400\",\n      \"exterior\": \"white\",\n      \"interior\":\"black\",\n      \"style\":\"2017\",\n      \"icon\":[\"http://localhost/image/c400_1.png\",\"http://localhost/image/c400_2.png\"]\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{vehicle_api_host}}:{{vehicle_api_port}}/api/models",
							"protocol": "http",
							"host": [
								"{{vehicle_api_host}}"
							],
							"port": "{{vehicle_api_port}}",
							"path": [
								"api",
								"models"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "delete model 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"ok\"] = responseCode.code == 200;",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\",\n  \"data\":{\n    \"category\":\"Model\",\n    \"fields\":{\n      \"brand\":\"Benz\",\n      \"modelName\":\"C400\",\n      \"exterior\": \"white\",\n      \"interior\":\"black\",\n      \"style\":\"2017\",\n      \"icon\":[\"http://localhost/image/c400_1.png\",\"http://localhost/image/c400_2.png\"]\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{vehicle_api_host}}:{{vehicle_api_port}}/api/models/{{model_2_id}}",
							"protocol": "http",
							"host": [
								"{{vehicle_api_host}}"
							],
							"port": "{{vehicle_api_port}}",
							"path": [
								"api",
								"models",
								"{{model_2_id}}"
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "2-vehicle",
			"description": "",
			"item": [
				{
					"name": "add vehicle",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"jsonData = jsonData.data||jsonData;",
									"tests[\"uuid found\"] = jsonData.uuid;",
									"if(jsonData.uuid){",
									"postman.setEnvironmentVariable(\"vehicle_id\", jsonData.uuid);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r  \"token\": \"{{token}}\",\r  \"data\":{\r    \"category\":\"Vehicle\",\r    \"fields\":{\r      \"model\":\"{{model_id}}\",\r      \"warehouse\":\"{{warehouse_id}}\",\r      \"vin\":\"1234567\",\r      \"code\":\"abcde\",\r      \"advice_price\":100000,\r      \"production_date\":\"2015-01-01\",\r      \"deposit_date\":\"2017-01-01\"\r    }\r  }\r}"
						},
						"url": {
							"raw": "http://{{vehicle_api_host}}:{{vehicle_api_port}}/api/vehicles",
							"protocol": "http",
							"host": [
								"{{vehicle_api_host}}"
							],
							"port": "{{vehicle_api_port}}",
							"path": [
								"api",
								"vehicles"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "patch vehicle",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"ok\"] = responseCode.code == 200;"
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r  \"token\": \"{{token}}\",\r  \"data\":{\r    \"category\":\"Vehicle\",\r    \"fields\":{\r      \"advice_price\":80000\r    }\r  }\r}"
						},
						"url": {
							"raw": "http://{{vehicle_api_host}}:{{vehicle_api_port}}/api/vehicles/{{vehicle_id}}",
							"protocol": "http",
							"host": [
								"{{vehicle_api_host}}"
							],
							"port": "{{vehicle_api_port}}",
							"path": [
								"api",
								"vehicles",
								"{{vehicle_id}}"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "query vehicles",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"at least one found\"] = jsonData.length >=1||jsonData.data.length >=1",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "http://{{vehicle_api_host}}:{{vehicle_api_port}}/api/vehicles",
							"protocol": "http",
							"host": [
								"{{vehicle_api_host}}"
							],
							"port": "{{vehicle_api_port}}",
							"path": [
								"api",
								"vehicles"
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "3-order",
			"description": "",
			"item": [
				{
					"name": "add order",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"jsonData = jsonData.data||jsonData;",
									"tests[\"uuid found\"] = jsonData.uuid;",
									"if(jsonData.uuid){",
									"postman.setEnvironmentVariable(\"order_id\", jsonData.uuid);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r  \"token\": \"{{token}}\",\r  \"data\":{\r    \"category\":\"Order\",\r    \"fields\":{\r      \"subscriber\":\"{{auth_user_id}}\",\r      \"occurrence_date\":\"2017-05-01\",\r      \"entries\":[{\"model\":\"{{model_id}}\",\"warehouse\":\"{{warehouse_id}}\",\"price\":90000,\"quantity\":20},{\"model\":\"{{model_1_id}}\",\"warehouse\":\"{{warehouse_id}}\",\"price\":100000,\"quantity\":10}],\r      \"note\":\"hello\"\r    }\r  }\r}"
						},
						"url": {
							"raw": "http://{{vehicle_api_host}}:{{vehicle_api_port}}/api/orders",
							"protocol": "http",
							"host": [
								"{{vehicle_api_host}}"
							],
							"port": "{{vehicle_api_port}}",
							"path": [
								"api",
								"orders"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "patch order",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"ok\"] = responseCode.code == 200;"
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r  \"token\": \"{{token}}\",\r  \"data\":{\r    \"category\":\"Order\",\r    \"fields\":{\r      \"subscriber\":\"{{auth_user_id}}\",\r      \"occurrence_date\":\"2017-05-01\",\r      \"entries\":[{\"model\":\"{{model_id}}\",\"warehouse\":\"{{warehouse_id}}\",\"price\":90000,\"quantity\":20}],\r      \"note\":\"hello1\"\r    }\r  }\r}"
						},
						"url": {
							"raw": "http://{{vehicle_api_host}}:{{vehicle_api_port}}/api/orders/{{order_id}}",
							"protocol": "http",
							"host": [
								"{{vehicle_api_host}}"
							],
							"port": "{{vehicle_api_port}}",
							"path": [
								"api",
								"orders",
								"{{order_id}}"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "query orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"at least one found\"] = jsonData.length >=1||jsonData.data.length >=1",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "http://{{vehicle_api_host}}:{{vehicle_api_port}}/api/orders",
							"protocol": "http",
							"host": [
								"{{vehicle_api_host}}"
							],
							"port": "{{vehicle_api_port}}",
							"path": [
								"api",
								"orders"
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		}
	]
}