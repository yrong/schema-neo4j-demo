{
	"info": {
		"_postman_id": "1aacdc62-aaa7-474c-a488-85c2e116baaa",
		"name": "cmdb",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "prepare",
			"description": null,
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1743ae0f-48d3-4c33-9e47-5611dfa62da4",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"var data = jsonData.data?jsonData.data:jsonData",
									"var token = data.token",
									"tests[\"token found\"] = token;",
									"if(token){",
									"    postman.setEnvironmentVariable(\"token\", token);",
									"}",
									"var userid = data.local.uuid",
									"if(userid){",
									"    postman.setEnvironmentVariable(\"auth_user_id\", userid);",
									"}",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\":\"{{auth_user}}\",\n  \"password\":\"{{auth_passwd}}\"\n}"
						},
						"url": {
							"raw": "http://{{auth_api_host}}:{{auth_api_port}}/auth/login",
							"protocol": "http",
							"host": [
								"{{auth_api_host}}"
							],
							"port": "{{auth_api_port}}",
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "clear all items in db",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/hidden/clean",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"hidden",
								"clean"
							]
						},
						"description": "A `GET` request to this endpoint returns the list of all request headers as part of the response JSON.\nIn Postman, sending your own set of headers through the [Headers tab](https://www.getpostman.com/docs/requests#headers?source=echo-collection-app-onboarding) will reveal the headers as part of the response."
					},
					"response": []
				},
				{
					"name": "get license",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"expiration find\"] = jsonData.expiration||jsonData.data.expiration"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/license",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"license"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "auxiliary",
			"description": null,
			"item": [
				{
					"name": "add server_room",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"uuid found\"] = jsonData.uuid;",
									"if(jsonData.uuid){",
									"    postman.setEnvironmentVariable(\"server_room_id\", jsonData.uuid);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\",\n  \"data\":{\n    \"category\":\"ServerRoom\",\n    \"fields\":{\n      \"name\":\"server_room\",\n      \"description\":\"机房\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/serverRooms",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"serverRooms"
							]
						}
					},
					"response": []
				},
				{
					"name": "add cabinet ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"uuid found\"] = jsonData.uuid;",
									"if(jsonData.uuid){",
									"    postman.setEnvironmentVariable(\"cabinet_id\", jsonData.uuid);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\",\n  \"data\":{\n    \"category\":\"Cabinet\",\n    \"fields\":{\n      \"name\":\"cabinet\",\n      \"description\":\"cabinet\",\n      \"server_room_id\":\"{{server_room_id}}\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/cabinets",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"cabinets"
							]
						}
					},
					"response": []
				},
				{
					"name": "query server room",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"at least one room found\"] = jsonData.length >=1||jsonData.data.length >=1",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/serverRooms",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"serverRooms"
							]
						}
					},
					"response": []
				},
				{
					"name": "query server room with members",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"at least one room found\"] = jsonData.length >=1||jsonData.data.length >=1",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"category\":\"ServerRoom\"\n}\n"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/members",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"members"
							]
						}
					},
					"response": []
				},
				{
					"name": "query Cabinets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"1 cabinet found\"] = jsonData.length === 1||jsonData.data.length >=1"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/cabinets",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"cabinets"
							]
						}
					},
					"response": []
				},
				{
					"name": "add warehouse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"uuid found\"] = jsonData.uuid;",
									"if(jsonData.uuid){",
									"    postman.setEnvironmentVariable(\"warehouse_id\", jsonData.uuid);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\",\n  \"data\":{\n    \"category\":\"WareHouse\",\n    \"fields\":{\n      \"name\":\"warehouse\",\n      \"description\":\"warehouse\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/wareHouses",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"wareHouses"
							]
						}
					},
					"response": []
				},
				{
					"name": "add shelf",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"uuid found\"] = jsonData.uuid",
									"if(jsonData.uuid){",
									"    postman.setEnvironmentVariable(\"shelf_id\", jsonData.uuid);",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\",\n  \"data\":{\n    \"category\":\"Shelf\",\n    \"fields\":{\n      \"name\":\"shelf\",\n      \"description\":\"shelf\",\n      \"warehouse_id\": \"{{warehouse_id}}\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/shelves",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"shelves"
							]
						}
					},
					"response": []
				},
				{
					"name": "query warehouse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"at least one warehouse found\"] = jsonData.length >=1||jsonData.data.length >=1",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/wareHouses",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"wareHouses"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "itservice",
			"description": null,
			"item": [
				{
					"name": "add ServiceGroup Messaging",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"uuid found\"] = jsonData.uuid;",
									"if(jsonData.uuid){",
									"    postman.setEnvironmentVariable(\"group_messaging_id\", jsonData.uuid);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\",\n  \"data\":{\n    \"category\":\"ITServiceGroup\",\n    \"fields\":{\n      \"name\":\"Messaging\",\n      \"description\":\"Messaging\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/it_services/group",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"it_services",
								"group"
							]
						}
					},
					"response": []
				},
				{
					"name": "add ServiceGroup Infrastructure",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"uuid found\"] = jsonData.uuid;",
									"if(jsonData.uuid){",
									"    postman.setEnvironmentVariable(\"group_infrastructure_id\", jsonData.uuid);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\",\n  \"data\":{\n    \"category\":\"ITServiceGroup\",\n    \"fields\":{\n      \"name\":\"Infrastructure\",\n      \"description\":\"Infrastructure\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/it_services/group",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"it_services",
								"group"
							]
						}
					},
					"response": []
				},
				{
					"name": "add ITService Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"uuid found\"] = jsonData.uuid;",
									"if(jsonData.uuid){",
									"    postman.setEnvironmentVariable(\"service_email_id\", jsonData.uuid);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\",\n  \"data\":{\n    \"category\":\"ITService\",\n    \"fields\":{\n      \"name\":\"email\",\n      \"description\":\"email\",\n      \"group\":\"{{group_messaging_id}}\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/it_services/service",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"it_services",
								"service"
							]
						}
					},
					"response": []
				},
				{
					"name": "add ITService Email With Name Conflict",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(responseCode);",
									"tests[\"add ITService Email With same name conflict\"] = responseCode.code > 400"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\",\n  \"data\":{\n    \"category\":\"ITService\",\n    \"fields\":{\n      \"name\":\"email\",\n      \"description\":\"email\",\n      \"group\":\"{{group_messaging_id}}\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/it_services/service",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"it_services",
								"service"
							]
						}
					},
					"response": []
				},
				{
					"name": "add ITService Pop3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"uuid found\"] = jsonData.uuid;",
									"if(jsonData.uuid){",
									"    postman.setEnvironmentVariable(\"service_pop3_id\", jsonData.uuid);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\",\n  \"data\":{\n    \"category\":\"ITService\",\n    \"fields\":{\n      \"name\":\"pop3\",\n      \"description\":\"pop3\",\n      \"group\":\"{{group_messaging_id}}\",\n      \"parent\":\"{{service_email_id}}\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/it_services/service",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"it_services",
								"service"
							]
						}
					},
					"response": []
				},
				{
					"name": "add ITService Dns",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"uuid found\"] = jsonData.uuid;",
									"if(jsonData.uuid){",
									"    postman.setEnvironmentVariable(\"service_dns_id\", jsonData.uuid);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\":\"{{token}}\",\n  \"data\":{\n    \"category\":\"ITService\",\n    \"fields\":{\n      \"name\":\"dns\",\n      \"description\":\"dns\",\n      \"group\":\"{{group_infrastructure_id}}\",\n      \"dependendents\":[\"{{service_email_id}}\"]\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/it_services/service",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"it_services",
								"service"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch ITService Dns",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"uuid found\"] = jsonData.uuid;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\",\n  \"data\":{\n    \"category\":\"ITService\",\n    \"fields\":{\n      \"description\":\"dns2\",\n      \"group\":\"{{group_infrastructure_id}}\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/it_services/service/{{service_dns_id}}",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"it_services",
								"service",
								"{{service_dns_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "query all it service groups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"2 it service groups found\"] = jsonData.length === 2||jsonData.data.length >=2"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/it_services/group",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"it_services",
								"group"
							]
						}
					},
					"response": []
				},
				{
					"name": "query all it service",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"it services found\"] = jsonData.length >=3||jsonData.data.length >=3"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/it_services/service",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"it_services",
								"service"
							]
						}
					},
					"response": []
				},
				{
					"name": "add ServiceGroup test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"uuid found\"] = jsonData.uuid;",
									"if(jsonData.uuid){",
									"    postman.setEnvironmentVariable(\"group_test_id\", jsonData.uuid);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\",\n  \"data\":{\n    \"category\":\"ITServiceGroup\",\n    \"fields\":{\n      \"name\":\"test\",\n      \"description\":\"test\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/it_services/group",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"it_services",
								"group"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete  ServiceGroup test success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\"\n}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/it_services/group/{{group_test_id}}",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"it_services",
								"group",
								"{{group_test_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete used ServiceGroup Messaging failed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"node already referenced\"] = responseCode.code != 200",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\"\n}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/it_services/group/{{group_messaging_id}}",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"it_services",
								"group",
								"{{group_messaging_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "query all it service groups with members",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"2 it service groups found\"] = jsonData.length === 2||jsonData.data.length >=2"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"category\":\"ITServiceGroup\"\n}\n"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/members",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"members"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "configurationItem",
			"description": null,
			"item": [
				{
					"name": "add operating system windows",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"uuid found\"] = jsonData.uuid;",
									"if(jsonData.uuid){",
									"postman.setEnvironmentVariable(\"winxp_os_id\", jsonData.uuid);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r  \"token\": \"{{token}}\",\r  \"data\":{\r    \"category\":\"Software\",\r    \"fields\":{\r      \"name\":\"windows xp\",\r      \"description\":\"Microsoft Windows XP\",\r      \"tags\": [\"OperatingSystem\"]\r    }\r  }\r}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/cfgItems",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"cfgItems"
							]
						}
					},
					"response": []
				},
				{
					"name": "add operating system ubuntu",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"uuid found\"] = jsonData.uuid;",
									"if(jsonData.uuid){",
									"postman.setEnvironmentVariable(\"ubuntu_os_id\", jsonData.uuid);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r  \"token\": \"{{token}}\",\r  \"data\":{\r    \"category\":\"Software\",\r    \"fields\":{\r      \"name\":\"ubuntu\",\r      \"description\":\"ubuntu\",\r      \"tags\": [\"OperatingSystem\"]\r    }\r  }\r}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/cfgItems",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"cfgItems"
							]
						}
					},
					"response": []
				},
				{
					"name": "add application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"uuid found\"] = jsonData.uuid;",
									"if(jsonData.uuid){",
									"postman.setEnvironmentVariable(\"application_id\", jsonData.uuid);",
									"}",
									""
								],
								"id": "908f5135-9d60-457b-b28b-3d61e930f95f",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\":{\n    \"category\":\"Software\",\n    \"fields\":{\n      \"tags\":[\"AntispamGateway\"],\n      \"name\":\"反垃圾邮件网关\",\n      \"provider\":\"网际思安\",\n      \"version\":\"1234\",\n      \"key\":\"1234\",\n      \"quantity\":1,\n      \"contact_id\":\"1234\",\n      \"status\":{\"status\":\"In_Use\",\"fields\":{\"a\":1}},\n      \"it_service\":[\"{{service_email_id}}\"],\n      \"responsibility\":\"{{auth_user_id}}\",\n      \"sn\":\"123456\",\n      \"product_date\":\"2016-08-11\",\n      \"warranty_expiration_date\":\"2016-11-11\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/cfgItems",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"cfgItems"
							]
						}
					},
					"response": []
				},
				{
					"name": "query softwares",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"at least one software found\"] = jsonData.length >=1||jsonData.data.length >=1",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/cfgItems?tags=Software",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"cfgItems"
							],
							"query": [
								{
									"key": "tags",
									"value": "Software"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "query operating systems",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"at least one software found\"] = jsonData.length >=1||jsonData.data.length >=1",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/cfgItems?tags=OperatingSystem",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"cfgItems"
							],
							"query": [
								{
									"key": "tags",
									"value": "OperatingSystem"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add router",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"uuid found\"] = jsonData.uuid;",
									"if(jsonData.uuid){",
									"postman.setEnvironmentVariable(\"router_id\", jsonData.uuid);",
									"}",
									"var additionalPropertyCheck = (environment['additionalPropertyCheck'] == 'true'?true:false);",
									"if(additionalPropertyCheck){",
									"   postman.setNextRequest(\"additionalPropertyCheck\"); ",
									"}",
									"",
									""
								],
								"id": "555cc021-27a0-4768-91e6-52947f4d3ba7",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\",\n  \"data\":{\n    \"category\":\"Router\",\n    \"fields\":{\n      \"name\":\"router1\",\n      \"status\":{\"status\":\"In_Use\",\"fields\":{\"a\":1}},\n      \"it_service\":[\"{{service_email_id}}\"],\n      \"responsibility\":\"{{auth_user_id}}\",\n      \"sn\":\"123456\",\n      \"model\":\"a10\",\n      \"product_date\":\"2016-08-11\",\n      \"warranty_expiration_date\":\"2016-11-11\",\n      \"asset_location\": {\"status\":\"mounted\",\"u\":42,\"date_mounted\":\"2016-06-28\",\"cabinet\":\"{{cabinet_id}}\",\"test\":\"test\"},\n      \"geo_location\": {\"name\":\"beijing\",\"location\":{\"lat\":39.98,\"lon\":116.30}},\n      \"used_by_user\": {\n            \"dn\": \"cn=ron yang,ou=users,dc=test,dc=com\",\n            \"uidNumber\": \"1000\",\n            \"uid\": \"ryang\"\n          },\n      \"used_by_dept\": {\n        \"dn\": \"ou=groups,dc=test,dc=com\",\n        \"ou\": \"groups\"\n      }\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/cfgItems",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"cfgItems"
							]
						}
					},
					"response": []
				},
				{
					"name": "add physical server",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"uuid found\"] = jsonData.uuid;",
									"if(jsonData.uuid){",
									"postman.setEnvironmentVariable(\"physical_server_id\", jsonData.uuid);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\",\n  \"data\":{\n    \"category\":\"PhysicalServer\",\n    \"fields\":{\n       \"name\":\"AS-2285-BAK\",\n      \"it_service\":[\"{{service_email_id}}\",\"{{service_pop3_id}}\"],\n      \"ip_address\":[\"192.168.0.108\"],\n      \"technical_support_info\":\"010-123456\",\n      \"operating_system\": \"{{ubuntu_os_id}}\",\n      \"storage_info\": \"hp-disk1\",\n      \"model\":\"b10\",\n      \"product_date\":\"2016-10-11\",\n      \"warranty_expiration_date\":\"2016-11-11\",\n      \"retirement_date\":\"2017-02-11\",\n      \"asset_location\": {\"status\":\"on_shelf\",\"shelf\":\"{{shelf_id}}\",\"label\":\"label\",\"other\":\"other\"},\n      \"management_ip\":[\"192.168.0.108\"],\n      \"monitored\":true,\n      \"asset_id\":\"test\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/cfgItems",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"cfgItems"
							]
						}
					},
					"response": []
				},
				{
					"name": "add switch",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"uuid found\"] = jsonData.uuid;",
									"if(jsonData.uuid){",
									"postman.setEnvironmentVariable(\"switch_id\", jsonData.uuid);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\",\n  \"data\":{\n    \"category\":\"Switch\",\n    \"fields\":{\n      \"name\":\"switch\",\n      \"it_service\":[\"{{service_dns_id}}\"],\n      \"responsibility\":\"{{auth_user_id}}\",\n      \"sn\":\"123456\",\n      \"model\":\"a10\",\n      \"product_date\":\"2016-10-11\",\n      \"warranty_expiration_date\":\"2016-11-11\",\n      \"asset_location\": {\"status\":\"mounted\",\"u\":42,\"date_mounted\":\"2016-06-28\",\"cabinet\":\"{{cabinet_id}}\"}\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/cfgItems",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"cfgItems"
							]
						}
					},
					"response": []
				},
				{
					"name": "add firewall",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"uuid found\"] = jsonData.uuid;",
									"if(jsonData.uuid){",
									"postman.setEnvironmentVariable(\"firewall_id\", jsonData.uuid);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\",\n  \"data\":{\n    \"category\":\"Firewall\",\n    \"fields\":{\n      \"name\":\"firewall\",\n      \"it_service\":[\"{{service_dns_id}}\"],\n      \"responsibility\":\"{{auth_user_id}}\",\n      \"sn\":\"123456\",\n      \"model\":\"b10\",\n      \"product_date\":\"2016-10-11\",\n      \"warranty_expiration_date\":\"2016-11-11\",\n      \"asset_location\": {\"status\":\"on_shelf\",\"shelf\":\"{{shelf_id}}\",\"label\":\"label\",\"other\":\"other\"}\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/cfgItems",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"cfgItems"
							]
						}
					},
					"response": []
				},
				{
					"name": "add virtual server",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"uuid found\"] = jsonData.uuid;",
									"if(jsonData.uuid){",
									"   postman.setEnvironmentVariable(\"virtual_server_id\", jsonData.uuid); ",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\",\n  \"data\":{\n    \"category\":\"VirtualServer\",\n    \"fields\":{\n       \"name\":\"virtualserver\",\n      \"it_service\":[\"{{service_email_id}}\",\"{{service_pop3_id}}\"],\n      \"ip_address\":[\"192.168.0.107\"],\n      \"technical_support_info\":\"010-123456\",\n      \"operating_system\": \"{{winxp_os_id}}\",\n      \"applications\":[\"{{application_id}}\"],\n      \"storage_info\": \"hp-disk1\",\n      \"model\":\"b10\",\n      \"product_date\":\"2016-10-11\",\n      \"warranty_expiration_date\":\"2016-11-11\",\n      \"management_ip\":[\"192.168.0.107\"],\n      \"monitored\":true,\n      \"host_server\":\"{{physical_server_id}}\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/cfgItems",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"cfgItems"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch router with it_service",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"uuid found\"] = jsonData.uuid;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\",\n  \"data\":{\n    \"category\":\"Router\",\n    \"fields\":{\n      \"it_service\":[\"{{service_pop3_id}}\",\"{{service_email_id}}\"],\n      \"sn\":\"12345678\",\n      \"responsibility\":\"{{auth_user_id}}\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/cfgItems/{{router_id}}",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"cfgItems",
								"{{router_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch physical server with os",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"uuid found\"] = jsonData.uuid;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\",\n  \"data\":{\n    \"category\":\"PhysicalServer\",\n    \"fields\":{\n      \"it_service\":[\"{{service_pop3_id}}\",\"{{service_dns_id}}\"],\n      \"sn\":\"12345678\",\n      \"responsibility\":\"{{auth_user_id}}\",\n      \"operating_system\": \"{{ubuntu_os_id}}\",\n      \"asset_location\": {\"status\":\"mounted\",\"u\":42,\"date_mounted\":\"2016-06-28\",\"cabinet\":\"{{cabinet_id}}\",\"test\":\"test\"}\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/cfgItems/{{physical_server_id}}",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"cfgItems",
								"{{physical_server_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "query router by uuid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"1 Configuration Item found\"] = jsonData.uuid === environment['router_id']"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/cfgItems/{{router_id}}",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"cfgItems",
								"{{router_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "query physical server by uuid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"1 Configuration Item found\"] = jsonData.uuid === environment['physical_server_id']"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/cfgItems/{{physical_server_id}}",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"cfgItems",
								"{{physical_server_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "query ConfigurationItems",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"1 Configuration Item found\"] = jsonData.length >= 1||jsonData.data.length >=1"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/cfgItems",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"cfgItems"
							]
						}
					},
					"response": []
				},
				{
					"name": "query ConfigurationItems by subcategory",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"1 Configuration Item found\"] = jsonData.length >= 1||jsonData.data.length >=1"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/cfgItems?subcategory=Software",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"cfgItems"
							],
							"query": [
								{
									"key": "subcategory",
									"value": "Software"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "query ConfigurationItems paginated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"2 Configuration Item found\"] = (jsonData.results&&jsonData.results.length === 2)||jsonData.data.results.length ==2"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/cfgItems?page=1&per_page=2",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"cfgItems"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "per_page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete already referenced email service fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"node already referenced\"] = responseCode.code > 400",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/it_services/service/{{service_email_id}}",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"it_services",
								"service",
								"{{service_email_id}}"
							]
						},
						"description": "A `GET` request to this endpoint returns the list of all request headers as part of the response JSON.\nIn Postman, sending your own set of headers through the [Headers tab](https://www.getpostman.com/docs/requests#headers?source=echo-collection-app-onboarding) will reveal the headers as part of the response."
					},
					"response": []
				},
				{
					"name": "delete already referenced asset fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"node already referenced\"] = responseCode.code > 400",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/cabinets/{{cabinet_id}}",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"cabinets",
								"{{cabinet_id}}"
							]
						},
						"description": "A `GET` request to this endpoint returns the list of all request headers as part of the response JSON.\nIn Postman, sending your own set of headers through the [Headers tab](https://www.getpostman.com/docs/requests#headers?source=echo-collection-app-onboarding) will reveal the headers as part of the response."
					},
					"response": []
				},
				{
					"name": "delete already referenced physical server fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"node already referenced\"] = responseCode.code > 400",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/cfgItems/{{physical_server_id}}",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"cfgItems",
								"{{physical_server_id}}"
							]
						},
						"description": "A `GET` request to this endpoint returns the list of all request headers as part of the response JSON.\nIn Postman, sending your own set of headers through the [Headers tab](https://www.getpostman.com/docs/requests#headers?source=echo-collection-app-onboarding) will reveal the headers as part of the response."
					},
					"response": []
				}
			]
		},
		{
			"name": "processFlow",
			"description": null,
			"item": [
				{
					"name": "add article 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"jsonData = jsonData.data||jsonData;",
									"tests[\"uuid found\"] = jsonData.uuid;",
									"postman.setEnvironmentVariable(\"article_1_id\", jsonData.uuid);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\":\"{{token}}\",\n    \"title\": \"水电费\",\n    \"it_service\": [\"{{service_email_id}}\"],\n    \"tag\": [\"测试\",\"随机\"],\n  \"author\": \"{{auth_user_id}}\",\n  \"ref_links\": [\"https://www.baidu.com/\"],\n  \"tasks\": \"测试插入\",\n  \"type\":\"Troubleshooting\",\n  \"content\":{\"description\": \"水电费\", \"analysis\": \"水电费\", \"solution\":\"前几天，我的邻居小伙伴突然在QQ上问我突然在不，她比我大几岁，平日里交集不算太多，这么冷不丁的来一句“在吗？”，让我误以为是骗子又来实施诈骗了\",\"workaround\": \"水电费\"}\n }\n\n"
						},
						"url": {
							"raw": "http://{{kb_api_host}}:{{kb_api_port}}/KB/API/v1/articles",
							"protocol": "http",
							"host": [
								"{{kb_api_host}}"
							],
							"port": "{{kb_api_port}}",
							"path": [
								"KB",
								"API",
								"v1",
								"articles"
							]
						}
					},
					"response": []
				},
				{
					"name": "add incident flow 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"uuid found\"] = jsonData.uuid;",
									"if(jsonData.uuid){",
									"postman.setEnvironmentVariable(\"incident_flow_1_id\", jsonData.uuid);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\",\n  \"data\":{\n    \"category\":\"IncidentFlow\",\n    \"fields\":{\n      \"it_service\":[\"{{service_email_id}}\",\"{{service_pop3_id}}\"],\n      \"committer\":\"{{auth_user_id}}\",\n      \"executor\":\"{{auth_user_id}}\",\n      \"reference_kb\":[\"{{article_1_id}}\"],\n      \"status\": \"open\",\n      \"title\":\"title\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/processFlows",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"processFlows"
							]
						}
					},
					"response": []
				},
				{
					"name": "add incident flow 2 reference incident flow 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"uuid found\"] = jsonData.uuid;",
									"if(jsonData.uuid){",
									"postman.setEnvironmentVariable(\"incident_flow_2_id\", jsonData.uuid);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\",\n  \"data\":{\n    \"category\":\"IncidentFlow\",\n    \"fields\":{\n      \"it_service\":[\"{{service_dns_id}}\"],\n      \"committer\":\"{{auth_user_id}}\",\n      \"executor\":\"{{auth_user_id}}\",\n       \"reference_kb\":[\"{{article_1_id}}\"],\n      \"reference_process_flow\":[\"{{incident_flow_1_id}}\"],\n      \"status\": \"open\",\n      \"title\":\"title\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/processFlows",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"processFlows"
							]
						}
					},
					"response": []
				},
				{
					"name": "add incident flow 3 with it_service empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"uuid found\"] = jsonData.uuid;",
									"if(jsonData.uuid){",
									"postman.setEnvironmentVariable(\"incident_flow_3_id\", jsonData.uuid);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\",\n  \"data\":{\n    \"category\":\"IncidentFlow\",\n    \"fields\":{\n      \"it_service\":[],\n      \"status\": \"open\",\n      \"test\":1,\n      \"title\": \"test\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/processFlows",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"processFlows"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch incident flow 1 status to solved",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"uuid found\"] = jsonData.uuid;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\",\n  \"data\":{\n    \"category\":\"IncidentFlow\",\n    \"fields\":{\n       \"status\": \"solved\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/processFlows/{{incident_flow_1_id}}",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"processFlows",
								"{{incident_flow_1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch incident flow 1 status to closed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"uuid found\"] = jsonData.uuid;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\",\n  \"data\":{\n    \"category\":\"IncidentFlow\",\n    \"fields\":{\n       \"status\": \"closed\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/processFlows/{{incident_flow_1_id}}",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"processFlows",
								"{{incident_flow_1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "query process flow by uuid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"process flow by uuid found\"] = jsonData.uuid;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/processFlows/{{incident_flow_1_id}}",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"processFlows",
								"{{incident_flow_1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete incident flow 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"deleted\"] = responseCode.code == 200",
									"",
									""
								],
								"id": "650dc8ec-56f8-466d-af78-3c5cf0565f8f",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/processFlows/{{incident_flow_3_id}}",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"processFlows",
								"{{incident_flow_3_id}}"
							]
						},
						"description": "A `GET` request to this endpoint returns the list of all request headers as part of the response JSON.\nIn Postman, sending your own set of headers through the [Headers tab](https://www.getpostman.com/docs/requests#headers?source=echo-collection-app-onboarding) will reveal the headers as part of the response."
					},
					"response": []
				},
				{
					"name": "add problem flow",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"uuid found\"] = jsonData.uuid;",
									"if(jsonData.uuid){",
									"postman.setEnvironmentVariable(\"incident_flow_1_id\", jsonData.uuid);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\",\n  \"data\":{\n    \"category\":\"ProblemFlow\",\n    \"fields\":{\n      \"it_service\":[\"{{service_email_id}}\",\"{{service_pop3_id}}\"],\n      \"committer\":\"{{auth_user_id}}\",\n      \"executor\":\"{{auth_user_id}}\",\n      \"reference_kb\":[\"{{article_1_id}}\"],\n      \"status\": \"open\",\n      \"title\":\"流程标题部分内容\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/processFlows",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"processFlows"
							]
						}
					},
					"response": []
				},
				{
					"name": "add change flow",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"uuid found\"] = jsonData.uuid;",
									"if(jsonData.uuid){",
									"postman.setEnvironmentVariable(\"incident_flow_1_id\", jsonData.uuid);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{token}}\",\n  \"data\":{\n    \"category\":\"ChangeFlow\",\n    \"fields\":{\n      \"it_service\":[\"{{service_email_id}}\",\"{{service_pop3_id}}\"],\n      \"committer\":\"{{auth_user_id}}\",\n      \"executor\":\"{{auth_user_id}}\",\n      \"reference_kb\":[\"{{article_1_id}}\"],\n      \"status\": \"open\",\n      \"title\":\"change\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/processFlows",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"processFlows"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "advancedSearch",
			"description": null,
			"item": [
				{
					"name": "cql",
					"description": null,
					"item": [
						{
							"name": "query ConfigurationItem mounted advanced",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"mount configurationItems\"] = jsonData.length ||jsonData.data.length>=1"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"category\":\"ConfigurationItem\",\n  \"cypherQueryFile\":\"mountedConfigurationItemRels\"\n}\n\n\n\n\n\n"
								},
								"url": {
									"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/searchByCypher",
									"protocol": "http",
									"host": [
										"{{cmdb_api_host}}"
									],
									"port": "{{cmdb_api_port}}",
									"path": [
										"api",
										"searchByCypher"
									]
								}
							},
							"response": []
						},
						{
							"name": "query uuid of it service by service name/id or service group name/id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"it service instance found\"] = jsonData.length >= 1||jsonData.data.length>=1;"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"category\":\"ITService\",\n  \"search\":[\"email\",\"pop3\"],\n  \"cypherQueryFile\":\"advanceSearchITService\"\n}"
								},
								"url": {
									"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/searchByCypher",
									"protocol": "http",
									"host": [
										"{{cmdb_api_host}}"
									],
									"port": "{{cmdb_api_port}}",
									"path": [
										"api",
										"searchByCypher"
									]
								}
							},
							"response": []
						},
						{
							"name": "query it service reference attributes by uuids",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"2 it service instances found\"] = jsonData.length >= 1||jsonData.data.length>=1;"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"category\":\"ITService\",\n  \"uuids\":[\"{{service_email_id}}\",\"{{service_pop3_id}}\"],\n  \"cypherQueryFile\":\"queryITServiceByIds\"\n}"
								},
								"url": {
									"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/searchByCypher",
									"protocol": "http",
									"host": [
										"{{cmdb_api_host}}"
									],
									"port": "{{cmdb_api_port}}",
									"path": [
										"api",
										"searchByCypher"
									]
								}
							},
							"response": []
						},
						{
							"name": "query  cmdb servers by service name/id or service group name/id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"server found\"] = jsonData.length >=1||jsonData.data.length>=1"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"category\":\"ConfigurationItem\",\n  \"cypherQueryFile\":\"queryHostsByITService\",\n  \"uuid\":[\"{{group_messaging_id}}\"]\n}"
								},
								"url": {
									"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/searchByCypher",
									"protocol": "http",
									"host": [
										"{{cmdb_api_host}}"
									],
									"port": "{{cmdb_api_port}}",
									"path": [
										"api",
										"searchByCypher"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "eql",
					"description": null,
					"item": [
						{
							"name": "search configurationItem by it service",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function pausecomp(millis)",
											" {",
											"  var date = new Date();",
											"  var curDate = null;",
											"  do { curDate = new Date(); }",
											"  while(curDate-date < millis);",
											"}",
											"",
											"//pausecomp(environment['es-refresh-interval']);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"configuration items found\"] = jsonData.count >= 1||jsonData.data.count>=1; "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"category\":\"ConfigurationItem\",\n  \"body\":\n  {\n      \"query\": {\n        \"bool\":{\n          \"must\":[\n            {\"match\":{\"status.status\":\"In_Use\"}},\n            {\"bool\":{\"should\":[{\"match\":{\"it_service\":\"{{service_email_id}}\"}},{\"match\":{\"it_service\":\"{{service_pop3_id}}\"}}]}}\n          ]\n        }\n          \n      },\n      \"sort\" : [\n          { \"product_date\" : {\"order\" : \"desc\"}}]\n  }\n}\n\n\n\n\n\n"
								},
								"url": {
									"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/searchByEql?page=1&per_page=10",
									"protocol": "http",
									"host": [
										"{{cmdb_api_host}}"
									],
									"port": "{{cmdb_api_port}}",
									"path": [
										"api",
										"searchByEql"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "per_page",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search configurationItem by keyword",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function pausecomp(millis)",
											" {",
											"  var date = new Date();",
											"  var curDate = null;",
											"  do { curDate = new Date(); }",
											"  while(curDate-date < millis);",
											"}",
											"",
											"//pausecomp(environment['es-refresh-interval']);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"configuration items found\"] = jsonData.count >= 1||jsonData.data.count>=1",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"category\":\"ConfigurationItem\",\n  \"keyword\":\"test\"\n}\n\n\n\n\n\n"
								},
								"url": {
									"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/searchByEql?page=1&per_page=10",
									"protocol": "http",
									"host": [
										"{{cmdb_api_host}}"
									],
									"port": "{{cmdb_api_port}}",
									"path": [
										"api",
										"searchByEql"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "per_page",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search configurationItem by ip_address",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function pausecomp(millis)",
											" {",
											"  var date = new Date();",
											"  var curDate = null;",
											"  do { curDate = new Date(); }",
											"  while(curDate-date < millis);",
											"}",
											"",
											"//pausecomp(environment['es-refresh-interval']);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"configuration items found\"] = jsonData.count >= 1||jsonData.data.count>=1",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"category\":\"ConfigurationItem\",\n  \"body\":\n  {\n      \"query\": {\n           \"term\": {\n\t\t      \"ip_address\": \"192.168.0.0/24\"\n\t\t    }\n      }\n  }\n}\n\n\n\n\n\n"
								},
								"url": {
									"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/searchByEql?page=1&per_page=10",
									"protocol": "http",
									"host": [
										"{{cmdb_api_host}}"
									],
									"port": "{{cmdb_api_port}}",
									"path": [
										"api",
										"searchByEql"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "per_page",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search processflow by title",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function pausecomp(millis)",
											" {",
											"  var date = new Date();",
											"  var curDate = null;",
											"  do { curDate = new Date(); }",
											"  while(curDate-date < millis);",
											"}",
											"",
											"//pausecomp(environment['es-refresh-interval']);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"configuration items found\"] = jsonData.count >= 1||jsonData.data.count>=1; "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "token",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"category\":\"ProcessFlow\",\n  \"body\":\n  {\n      \"query\": {\n        \"bool\":{\n          \"must\":[\n            {\"match\":{\"title\":\"title\"}}\n          ]\n        }\n      }\n  }\n}\n\n\n\n\n\n"
								},
								"url": {
									"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/searchByEql?page=1&per_page=10",
									"protocol": "http",
									"host": [
										"{{cmdb_api_host}}"
									],
									"port": "{{cmdb_api_port}}",
									"path": [
										"api",
										"searchByEql"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "per_page",
											"value": "10"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "schema",
			"description": null,
			"item": [
				{
					"name": "query properties of router",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)",
									"jsonData = jsonData.data||jsonData",
									"tests[\"Router schema found\"] = jsonData.properties"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/schema/Router",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"schema",
								"Router"
							]
						}
					},
					"response": []
				},
				{
					"name": "add Software Inheritance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"added\"] = responseCode.code == 200"
								],
								"id": "e92f6436-c8f4-4820-81c2-f0260d2a5a09",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"category\":\"Software\",\n\t\"subtype\": \"OperationSystem\"\n}"
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/schema/hierarchy/Software/",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"schema",
								"hierarchy",
								"Software",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "query Software Hierarchy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"jsonData = jsonData.data || jsonData",
									"tests[\"ConfigurationItem as root\"] = jsonData.name === 'Software'"
								],
								"id": "9d4df51a-784b-4fec-8f4d-cd4cb15a466f",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{cmdb_api_host}}:{{cmdb_api_port}}/api/schema/hierarchy/Software",
							"protocol": "http",
							"host": [
								"{{cmdb_api_host}}"
							],
							"port": "{{cmdb_api_port}}",
							"path": [
								"api",
								"schema",
								"hierarchy",
								"Software"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}